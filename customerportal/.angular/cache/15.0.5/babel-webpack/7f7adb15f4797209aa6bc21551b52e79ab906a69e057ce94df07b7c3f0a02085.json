{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiURL = \"http://localhost:54833/api/customer\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n      })\n    };\n  }\n  // getAll(): Observable<Customer[]> {\n  //   return this.httpClient.get<Customer[]>(this.apiURL + '/getallcustomers')\n  //   .pipe(\n  //     catchError(this.errorHandler)\n  //   )\n  // } \n  /**\r\n  * Write code on Method\r\n  *\r\n  * @return response()\r\n  */\n  getAll() {\n    var result = this.httpClient.get('https://localhost/getdata');\n    debugger;\n    return this.httpClient.get(this.apiURL + '/getallcustomers').pipe(retry(1), catchError(this.errorHandler));\n  }\n  errorHandler(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAsBC,UAAU,QAAQ,MAAM;AAC9C,SAASC,UAAU,EAAEC,KAAK,QAAQ,gBAAgB;;;AAOlD,OAAM,MAAOC,eAAe;EAW1BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAVtB,WAAM,GAAG,qCAAqC;IAEtD,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIP,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE;OACjC;KACF;EAE6C;EAE9C;EACA;EACA;EACA;EACA;EACA;EACI;;;;;EAKJQ,MAAM;IACJ,IAAIC,MAAM,GAAC,IAAI,CAACH,UAAU,CAACI,GAAG,CAAC,2BAA2B,CAAC;IAC3D;IACA,OAAO,IAAI,CAACJ,UAAU,CACnBI,GAAG,CAAW,IAAI,CAACC,MAAM,GAAG,kBAAkB,CAAC,CAC/CC,IAAI,CAACT,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACW,YAAY,CAAC,CAAC;EAClD;EAEAA,YAAY,CAACC,KAAkE;IAC7E,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAGD,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACpCD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACLF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzE,OAAOhB,UAAU,CAACc,YAAY,CAAC;EAClC;;AAxCYX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["HttpHeaders","throwError","catchError","retry","CustomerService","constructor","httpClient","headers","getAll","result","get","apiURL","pipe","errorHandler","error","errorMessage","ErrorEvent","message","status","factory","providedIn"],"sourceRoot":"","sources":["C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n    \nimport {  Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n   \nimport { Customer } from './customer';\n    \n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  private apiURL = \"http://localhost:54833/api/customer\";  \n       \n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n    })\n  }\n   \n  constructor(private httpClient: HttpClient) { }\n    \n  // getAll(): Observable<Customer[]> {\n  //   return this.httpClient.get<Customer[]>(this.apiURL + '/getallcustomers')\n  //   .pipe(\n  //     catchError(this.errorHandler)\n  //   )\n  // } \n      /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  getAll(): Observable<Customer> {\n    var result=this.httpClient.get('https://localhost/getdata');\n    debugger;\n    return this.httpClient\n      .get<Customer>(this.apiURL + '/getallcustomers')\n      .pipe(retry(1), catchError(this.errorHandler));\n  }\n\n  errorHandler(error: { error: { message: string; }; status: any; message: any; }) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}