{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../customer.service\";\nimport * as i3 from \"@angular/router\";\nexport class CreateComponent {\n  constructor(fb, customerService, router) {\n    this.fb = fb;\n    this.customerService = customerService;\n    this.router = router;\n    this.AssetsList = [];\n    this.CountryList = [];\n    this.RegionList = [];\n    this.CityList = [];\n    this.LocationList = [];\n  }\n  ngOnInit() {\n    this.issueForm = this.fb.group({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      dob: new FormControl('', Validators.required),\n      departmentId: new FormControl('', Validators.required)\n    });\n  }\n  get f() {\n    return this.issueForm.controls;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  submit() {\n    console.log(this.issueForm.value);\n    this.customerService.create(this.issueForm.value).subscribe(res => {\n      console.log('customer created successfully!');\n      this.router.navigateByUrl('customer/index');\n    });\n  }\n  loadmasters() {\n    this.loadassets();\n    this.loadcountries();\n    this.loadregions();\n    this.loadcity();\n    this.loadlocations();\n  }\n  loadassets() {\n    return this.customerService.getAllAssets().subscribe(data => {\n      this.AssetsList = data;\n    });\n  }\n  loadcountries() {\n    return this.customerService.getAllCountries().subscribe(data => {\n      this.CountryList = data;\n    });\n  }\n  loadregions() {\n    return this.customerService.getAllRegions().subscribe(data => {\n      this.RegionList = data;\n    });\n  }\n  loadcity() {\n    return this.customerService.getAllCities().subscribe(data => {\n      this.CityList = data;\n    });\n  }\n  loadlocations() {\n    return this.customerService.getAllLocations().subscribe(data => {\n      this.LocationList = data;\n    });\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/customer/index\", 1, \"btn\", \"btn-primary\"], [3, \"formGroup\", \"ngSubmit\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Create New Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.issueForm);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;;;;;AAShF,OAAM,MAAOC,eAAe;EAS1BC,YAAoBC,EAAe,EAAUC,eAAgC,EAClEC,MAAc;IADL,OAAE,GAAFF,EAAE;IAAuB,oBAAe,GAAfC,eAAe;IACjD,WAAM,GAANC,MAAM;IARjB,eAAU,GAAQ,EAAE;IACpB,gBAAW,GAAQ,EAAE;IACrB,eAAU,GAAQ,EAAE;IACpB,aAAQ,GAAQ,EAAE;IAClB,iBAAY,GAAQ,EAAE;EAIO;EAE7BC,QAAQ;IAEN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,SAAS,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACU,QAAQ,CAAC,CAAC;MACrDC,QAAQ,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACU,QAAQ,CAAC;MAClDE,MAAM,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACU,QAAQ,CAAC;MAChDG,GAAG,EAAE,IAAId,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACU,QAAQ,CAAC;MAC7CI,YAAY,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACU,QAAQ;KACtD,CAAC;EACJ;EAGA,IAAIK,CAAC;IACH,OAAO,IAAI,CAACR,SAAS,CAACS,QAAQ;EAChC;EAEA;;;;;EAKAC,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,SAAS,CAACa,KAAK,CAAC;IACjC,IAAI,CAAChB,eAAe,CAACiB,MAAM,CAAC,IAAI,CAACd,SAAS,CAACa,KAAK,CAAC,CAACE,SAAS,CAAEC,GAAO,IAAI;MACnEL,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACd,MAAM,CAACmB,aAAa,CAAC,gBAAgB,CAAC;IAChD,CAAC,CAAC;EACJ;EACFC,WAAW;IAET,IAAI,CAACC,UAAU,EAAE;IACf,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,aAAa,EAAE;EACxB;EAEEJ,UAAU;IACR,OAAO,IAAI,CAACtB,eAAe,CAAC2B,YAAY,EAAE,CAACT,SAAS,CAAEU,IAAQ,IAAI;MAChE,IAAI,CAACC,UAAU,GAAGD,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAL,aAAa;IACX,OAAO,IAAI,CAACvB,eAAe,CAAC8B,eAAe,EAAE,CAACZ,SAAS,CAAEU,IAAQ,IAAI;MACnE,IAAI,CAACG,WAAW,GAAGH,IAAI;IACzB,CAAC,CAAC;EACJ;EAEAJ,WAAW;IACT,OAAO,IAAI,CAACxB,eAAe,CAACgC,aAAa,EAAE,CAACd,SAAS,CAAEU,IAAQ,IAAI;MACjE,IAAI,CAACK,UAAU,GAAGL,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAH,QAAQ;IACN,OAAO,IAAI,CAACzB,eAAe,CAACkC,YAAY,EAAE,CAAChB,SAAS,CAAEU,IAAQ,IAAI;MAChE,IAAI,CAACO,QAAQ,GAAGP,IAAI;IACtB,CAAC,CAAC;EACJ;EAGAF,aAAa;IACX,OAAO,IAAI,CAAC1B,eAAe,CAACoC,eAAe,EAAE,CAAClB,SAAS,CAAEU,IAAQ,IAAI;MACnE,IAAI,CAACS,YAAY,GAAGT,IAAI;IAC1B,CAAC,CAAC;EACJ;;AA9EW/B,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAyC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BC,8BAAuB;MACfA,mCAAmB;MAAAA,iBAAK;MAC5BA,4BAAiE;MAAAA,oBAAI;MAAAA,iBAAI;MACvEA,+BAAoD;MAAtBA;QAAA,OAAYC,YAAQ;MAAA,EAAC;MAEpDD,iBAAO;;;MAFAA,eAAuB;MAAvBA,yCAAuB","names":["FormControl","Validators","CreateComponent","constructor","fb","customerService","router","ngOnInit","issueForm","group","firstName","required","lastName","gender","dob","departmentId","f","controls","submit","console","log","value","create","subscribe","res","navigateByUrl","loadmasters","loadassets","loadcountries","loadregions","loadcity","loadlocations","getAllAssets","data","AssetsList","getAllCountries","CountryList","getAllRegions","RegionList","getAllCities","CityList","getAllLocations","LocationList","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\create\\create.component.ts","C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../customer.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  issueForm!: FormGroup;\n  AssetsList: any = [];\n  CountryList: any = [];\n  RegionList: any = [];\n  CityList: any = [];\n  LocationList: any = [];\n\n     \n  constructor( public fb: FormBuilder,  public customerService: CustomerService,\n     private router: Router) { }\n\n  ngOnInit(): void {\n    \n    this.issueForm = this.fb.group({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      dob: new FormControl('', Validators.required),\n      departmentId: new FormControl('', Validators.required),\n    });\n  }\n\n\n  get f(){\n    return this.issueForm.controls;\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  submit(){\n    console.log(this.issueForm.value);\n    this.customerService.create(this.issueForm.value).subscribe((res:any) => {\n         console.log('customer created successfully!');\n         this.router.navigateByUrl('customer/index');\n    })\n  }\nloadmasters()\n{\n  this.loadassets();\n    this.loadcountries();\n    this.loadregions();\n    this.loadcity();\n    this.loadlocations();\n}\n\n  loadassets() {\n    return this.customerService.getAllAssets().subscribe((data: {}) => {    \n      this.AssetsList = data;\n    })\n  }\n  \n  loadcountries() {\n    return this.customerService.getAllCountries().subscribe((data: {}) => {    \n      this.CountryList = data;\n    })\n  }\n\n  loadregions() {\n    return this.customerService.getAllRegions().subscribe((data: {}) => {    \n      this.RegionList = data;\n    })\n  }\n\n  loadcity() {\n    return this.customerService.getAllCities().subscribe((data: {}) => {    \n      this.CityList = data;\n    })\n  }\n\n\n  loadlocations() {\n    return this.customerService.getAllLocations().subscribe((data: {}) => {    \n      this.LocationList = data;\n    })\n  }\n \n}\n","<div class=\"container\">\n    <h4>Create New Employee</h4>  \n    <a href=\"#\" routerLink=\"/customer/index\" class=\"btn btn-primary\">Back</a>        \n      <form [formGroup]=\"issueForm\" (ngSubmit)=\"submit()\">\n\n     </form>  \n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}