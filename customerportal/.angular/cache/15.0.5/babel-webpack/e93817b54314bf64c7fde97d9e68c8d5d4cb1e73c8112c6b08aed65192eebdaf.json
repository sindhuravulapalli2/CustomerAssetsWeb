{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../customer.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction CreateComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"CustomerName is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, CreateComponent_div_10_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"CustomerName\"].errors && ctx_r0.f[\"CustomerName\"].errors[\"required\"]);\n  }\n}\nfunction CreateComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const asset_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", asset_r8.AssetId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(asset_r8.AssetName);\n  }\n}\nfunction CreateComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r9.CountryId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r9.CountryName);\n  }\n}\nfunction CreateComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r10.RegionId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(region_r10.RegionName);\n  }\n}\nfunction CreateComponent_option_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r11.RegionId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r11.RegionName);\n  }\n}\nfunction CreateComponent_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r12.CityId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r12.CityName);\n  }\n}\nfunction CreateComponent_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const location_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", location_r13.LocationId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(location_r13.LocationName);\n  }\n}\nexport class CreateComponent {\n  constructor(fb, customerService, router) {\n    this.fb = fb;\n    this.customerService = customerService;\n    this.router = router;\n    this.AssetsList = [];\n    this.CountryList = [];\n    this.RegionList = [];\n    this.CityList = [];\n    this.LocationList = [];\n  }\n  ngOnInit() {\n    this.loadmasters();\n    this.issueForm = this.fb.group({\n      CustomerName: new FormControl('', [Validators.required]),\n      AssetId: new FormControl('', Validators.required),\n      CountryId: new FormControl('', Validators.required),\n      RegionId: new FormControl('', Validators.required),\n      CityId: new FormControl('', Validators.required),\n      LocationId: new FormControl('', Validators.required)\n    });\n  }\n  get f() {\n    return this.issueForm.controls;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  submit() {\n    console.log(this.issueForm.value);\n    this.customerService.create(this.issueForm.value).subscribe(res => {\n      console.log('customer created successfully!');\n      this.router.navigateByUrl('customer/index');\n    });\n  }\n  loadmasters() {\n    this.loadassets();\n    this.loadcountries();\n    this.loadregions();\n    this.loadcity();\n    this.loadlocations();\n  }\n  loadassets() {\n    return this.customerService.getAllAssets().subscribe(data => {\n      this.AssetsList = data;\n    });\n  }\n  loadcountries() {\n    return this.customerService.getAllCountries().subscribe(data => {\n      this.CountryList = data;\n    });\n  }\n  loadregions() {\n    return this.customerService.getAllRegions().subscribe(data => {\n      this.RegionList = data;\n    });\n  }\n  loadcity() {\n    return this.customerService.getAllCities().subscribe(data => {\n      this.CityList = data;\n    });\n  }\n  loadlocations() {\n    return this.customerService.getAllLocations().subscribe(data => {\n      this.LocationList = data;\n    });\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 55,\n  vars: 9,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/customer/index\", 1, \"btn\", \"btn-primary\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"CustomerName\"], [\"formControlName\", \"CustomerName\", \"id\", \"CustomerName\", \"type\", \"text\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"AssetId\"], [\"formControlName\", \"AssetId\", 1, \"form-control\"], [\"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"CountryId\"], [\"formControlName\", \"CountryId\", 1, \"form-control\"], [\"for\", \"RegionId\"], [\"formControlName\", \"RegionId\", 1, \"form-control\"], [\"for\", \"CityId\"], [\"formControlName\", \"CityId\", 1, \"form-control\"], [\"for\", \"LocationId\"], [\"formControlName\", \"LocationId\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Create New Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Customer Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵtemplate(10, CreateComponent_div_10_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Asset Type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"select\", 8)(15, \"option\", 9);\n      i0.ɵɵtext(16, \"Select AssetId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, CreateComponent_option_17_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Country:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"select\", 12)(22, \"option\", 9);\n      i0.ɵɵtext(23, \"Select Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, CreateComponent_option_24_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 13);\n      i0.ɵɵtext(27, \"Region:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"select\", 14)(29, \"option\", 9);\n      i0.ɵɵtext(30, \"Select Region\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, CreateComponent_option_31_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 3)(33, \"label\", 15);\n      i0.ɵɵtext(34, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"select\", 16)(36, \"option\", 9);\n      i0.ɵɵtext(37, \"Select City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(38, CreateComponent_option_38_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"div\", 3)(40, \"label\", 15);\n      i0.ɵɵtext(41, \"City:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"select\", 16)(43, \"option\", 9);\n      i0.ɵɵtext(44, \"Select City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(45, CreateComponent_option_45_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\", 3)(47, \"label\", 17);\n      i0.ɵɵtext(48, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"select\", 18)(50, \"option\", 9);\n      i0.ɵɵtext(51, \"Select Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(52, CreateComponent_option_52_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(53, \"button\", 19);\n      i0.ɵɵtext(54, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.issueForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"CustomerName\"].touched && ctx.f[\"CustomerName\"].invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.AssetsList);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CountryList);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.RegionList);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CityList);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CityList);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.LocationList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.issueForm.valid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    border: 1px solid grey;\\r\\n    border-collapse: collapse;\\r\\n    padding: 5px;\\r\\n  }\\r\\n  \\r\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd) {\\r\\n    background-color: #f1f1f1;\\r\\n  }\\r\\n  \\r\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\r\\n    background-color: #ffffff;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXIvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSwgdGggLCB0ZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgdGFibGUgdHI6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICB9XHJcbiAgXHJcbiAgdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","CreateComponent","constructor","fb","customerService","router","ngOnInit","loadmasters","issueForm","group","CustomerName","required","AssetId","CountryId","RegionId","CityId","LocationId","f","controls","submit","console","log","value","create","subscribe","res","navigateByUrl","loadassets","loadcountries","loadregions","loadcity","loadlocations","getAllAssets","data","AssetsList","getAllCountries","CountryList","getAllRegions","RegionList","getAllCities","CityList","getAllLocations","LocationList","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\create\\create.component.ts","C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../customer.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  issueForm!: FormGroup;\n  AssetsList: any = [];\n  CountryList: any = [];\n  RegionList: any = [];\n  CityList: any = [];\n  LocationList: any = [];\n     \n  constructor( public fb: FormBuilder,  public customerService: CustomerService,\n     private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadmasters();\n\n    this.issueForm = this.fb.group({\n      CustomerName: new FormControl('', [Validators.required]),\n      AssetId: new FormControl('', Validators.required),     \n      CountryId: new FormControl('', Validators.required),     \n      RegionId: new FormControl('', Validators.required), \n      CityId: new FormControl('', Validators.required), \n      LocationId: new FormControl('', Validators.required), \n    });\n  }\n\n\n  get f(){\n    return this.issueForm.controls;\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  submit(){\n    console.log(this.issueForm.value);\n    this.customerService.create(this.issueForm.value).subscribe((res:any) => {\n         console.log('customer created successfully!');\n         this.router.navigateByUrl('customer/index');\n    })\n  }\n\nloadmasters()\n{\n    this.loadassets();\n    this.loadcountries();\n    this.loadregions();\n    this.loadcity();\n    this.loadlocations();\n}\n\n  loadassets() {\n    return this.customerService.getAllAssets().subscribe((data: {}) => {    \n      this.AssetsList = data;\n    })\n  }\n  \n  loadcountries() {\n    return this.customerService.getAllCountries().subscribe((data: {}) => {    \n      this.CountryList = data;\n    })\n  }\n\n  loadregions() {\n    return this.customerService.getAllRegions().subscribe((data: {}) => {    \n      this.RegionList = data;\n    })\n  }\n\n  loadcity() {\n    return this.customerService.getAllCities().subscribe((data: {}) => {    \n      this.CityList = data;\n    })\n  }\n\n  loadlocations() {\n    return this.customerService.getAllLocations().subscribe((data: {}) => {    \n      this.LocationList = data;\n    })\n  }\n \n}\n","<div class=\"container\">\n    <h4>Create New Customer</h4>  \n    <a href=\"#\" routerLink=\"/customer/index\" class=\"btn btn-primary\">Back</a>        \n      <form [formGroup]=\"issueForm\" (ngSubmit)=\"submit()\">\n        <div class=\"form-group\">\n            <label for=\"CustomerName\">Customer Name:</label>\n            <input \n                formControlName=\"CustomerName\"\n                id=\"CustomerName\" \n                type=\"text\" \n                class=\"form-control\">\n            <div *ngIf=\"f['CustomerName'].touched && f['CustomerName'].invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f['CustomerName'].errors && f['CustomerName'].errors['required']\">CustomerName is required.</div>\n            </div>\n        </div>        \n        <div class=\"form-group\">\n            <label for=\"AssetId\">Asset Type:</label>\n            <select formControlName=\"AssetId\" class=\"form-control\">\n                <option disabled>Select AssetId</option>                \n                <option *ngFor=\"let asset of AssetsList\" \n                [value]=\"asset.AssetId\">{{asset.AssetName}}</option>\n            </select>             \n        </div>\n        <div class=\"form-group\">\n            <label for=\"CountryId\">Country:</label>\n            <select formControlName=\"CountryId\" class=\"form-control\">\n                <option disabled>Select Country</option>                \n                <option *ngFor=\"let country of CountryList\" \n                [value]=\"country.CountryId\">{{country.CountryName}}</option>\n            </select>             \n        </div>\n        <div class=\"form-group\">\n            <label for=\"RegionId\">Region:</label>\n            <select formControlName=\"RegionId\" class=\"form-control\">\n                <option disabled>Select Region</option>                \n                <option *ngFor=\"let region of RegionList\" \n                [value]=\"region.RegionId\">{{region.RegionName}}</option>\n            </select>             \n        </div>\n        <div class=\"form-group\">\n            <label for=\"CityId\">City:</label>\n            <select formControlName=\"CityId\" class=\"form-control\">\n                <option disabled>Select City</option>                \n                <option *ngFor=\"let city of CityList\" \n                [value]=\"city.RegionId\">{{city.RegionName}}</option>\n            </select>             \n        </div>\n        <div class=\"form-group\">\n            <label for=\"CityId\">City:</label>\n            <select formControlName=\"CityId\" class=\"form-control\">\n                <option disabled>Select City</option>                \n                <option *ngFor=\"let city of CityList\" \n                [value]=\"city.CityId\">{{city.CityName}}</option>\n            </select>             \n        </div>\n        <div class=\"form-group\">\n            <label for=\"LocationId\">Location:</label>\n            <select formControlName=\"LocationId\" class=\"form-control\">\n                <option disabled>Select Location</option>                \n                <option *ngFor=\"let location of LocationList\" \n                [value]=\"location.LocationId\">{{location.LocationName}}</option>\n            </select>             \n        </div>\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!issueForm.valid\">Submit</button>\n     </form>  \n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}