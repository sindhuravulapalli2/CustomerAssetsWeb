{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../customer.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction EditComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"CustomerName is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, EditComponent_div_13_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"CustomerName\"].errors && ctx_r0.f[\"CustomerName\"].errors[\"required\"]);\n  }\n}\nfunction EditComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const asset_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", asset_r7.AssetId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(asset_r7.AssetName);\n  }\n}\nfunction EditComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r8.CountryId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r8.CountryName);\n  }\n}\nfunction EditComponent_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r9.RegionId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(region_r9.RegionName);\n  }\n}\nfunction EditComponent_option_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r10.CityId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r10.CityName);\n  }\n}\nfunction EditComponent_option_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const location_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", location_r11.LocationId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(location_r11.LocationName);\n  }\n}\nexport class EditComponent {\n  constructor(fb, customerService, route, router) {\n    this.fb = fb;\n    this.customerService = customerService;\n    this.route = route;\n    this.router = router;\n    this.AssetsList = [];\n    this.CountryList = [];\n    this.RegionList = [];\n    this.CityList = [];\n    this.LocationList = [];\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  ngOnInit() {\n    this.loadmasters();\n    this.id = Number(this.route.snapshot.params['postId']);\n    this.customerService.find(this.id).subscribe(data => {\n      this.cust = data;\n    });\n    this.changeCountry();\n    this.changeRegion();\n    this.changeCity();\n    this.form = this.fb.group({\n      CustomerName: new FormControl('', [Validators.required]),\n      AssetId: new FormControl('', Validators.required),\n      CountryId: new FormControl('', Validators.required),\n      RegionId: new FormControl('', Validators.required),\n      CityId: new FormControl('', Validators.required),\n      LocationId: new FormControl('', Validators.required)\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  submit() {\n    this.form.value.customerId = Number(this.route.snapshot.params['postId']);\n    this.customerService.update(this.form.value).subscribe(res => {\n      this.router.navigateByUrl('customer/index');\n    });\n  }\n  loadmasters() {\n    this.loadassets();\n    this.loadcountries();\n  }\n  loadassets() {\n    return this.customerService.getAllAssets().subscribe(data => {\n      this.AssetsList = data;\n    });\n  }\n  loadcountries() {\n    return this.customerService.getAllCountries().subscribe(data => {\n      this.CountryList = data;\n    });\n  }\n  // loadregions() {\n  //   return this.customerService.getAllRegions().subscribe((data: {}) => {    \n  //     this.RegionList  = data;\n  //   })\n  // }\n  // loadcities() {\n  //   return this.customerService.getAllCities().subscribe((data: {}) => {    \n  //     this.CityList = data;\n  //   })\n  // }\n  // loadlocations() {\n  //   return this.customerService.getAllLocations().subscribe((data: {}) => {    \n  //     this.LocationList = data;\n  //   })\n  // }\n  changeCountry() {\n    return this.customerService.filtersRegions(this.cust.CountryId).subscribe(data => {\n      this.RegionList = data;\n    });\n  }\n  changeRegion() {\n    return this.customerService.filtersCities(this.cust.CountryId, this.cust.RegionId).subscribe(data => {\n      this.CityList = data;\n    });\n  }\n  changeCity() {\n    return this.customerService.filtersLocations(this.cust.CountryId, this.cust.RegionId, this.cust.CityId).subscribe(data => {\n      this.LocationList = data;\n    });\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 64,\n  vars: 14,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/customer/index\", 1, \"btn\", \"btn-primary\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"table\", \"table-striped\"], [\"for\", \"CustomerName\"], [\"formControlName\", \"CustomerName\", \"id\", \"CustomerName\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"AssetId\"], [\"formControlName\", \"AssetId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"CountryId\"], [\"formControlName\", \"CountryId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"RegionId\"], [\"formControlName\", \"RegionId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"CityId\"], [\"formControlName\", \"CityId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"LocationId\"], [\"formControlName\", \"LocationId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Update Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"table\", 3)(7, \"tr\")(8, \"td\")(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Customer Name:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"td\")(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.cust.CustomerName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, EditComponent_div_13_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tr\")(15, \"td\")(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Asset Type:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"td\")(19, \"select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_select_ngModelChange_19_listener($event) {\n        return ctx.cust.AssetId = $event;\n      });\n      i0.ɵɵelementStart(20, \"option\", 9);\n      i0.ɵɵtext(21, \"Select AssetId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, EditComponent_option_22_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"tr\")(24, \"td\")(25, \"label\", 11);\n      i0.ɵɵtext(26, \"Country:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"td\")(28, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_select_ngModelChange_28_listener($event) {\n        return ctx.cust.CountryId = $event;\n      })(\"change\", function EditComponent_Template_select_change_28_listener() {\n        return ctx.changeCountry();\n      });\n      i0.ɵɵelementStart(29, \"option\", 9);\n      i0.ɵɵtext(30, \"Select Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, EditComponent_option_31_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"tr\")(33, \"td\")(34, \"label\", 13);\n      i0.ɵɵtext(35, \"Region:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"td\")(37, \"select\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_select_ngModelChange_37_listener($event) {\n        return ctx.cust.RegionId = $event;\n      })(\"change\", function EditComponent_Template_select_change_37_listener() {\n        return ctx.changeRegion();\n      });\n      i0.ɵɵelementStart(38, \"option\", 9);\n      i0.ɵɵtext(39, \"Select Region\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(40, EditComponent_option_40_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(41, \"tr\")(42, \"td\")(43, \"label\", 15);\n      i0.ɵɵtext(44, \"City:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"td\")(46, \"select\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_select_ngModelChange_46_listener($event) {\n        return ctx.cust.CityId = $event;\n      })(\"change\", function EditComponent_Template_select_change_46_listener() {\n        return ctx.changeCity();\n      });\n      i0.ɵɵelementStart(47, \"option\", 9);\n      i0.ɵɵtext(48, \"Select City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(49, EditComponent_option_49_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(50, \"tr\")(51, \"td\")(52, \"label\", 17);\n      i0.ɵɵtext(53, \"Location:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(54, \"td\")(55, \"select\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function EditComponent_Template_select_ngModelChange_55_listener($event) {\n        return ctx.cust.LocationId = $event;\n      });\n      i0.ɵɵelementStart(56, \"option\", 9);\n      i0.ɵɵtext(57, \"Select Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(58, EditComponent_option_58_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(59, \"tr\");\n      i0.ɵɵelement(60, \"td\");\n      i0.ɵɵelementStart(61, \"td\")(62, \"button\", 19);\n      i0.ɵɵtext(63, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.cust.CustomerName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"CustomerName\"].touched && ctx.f[\"CustomerName\"].invalid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cust.AssetId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.AssetsList);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cust.CountryId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CountryList);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cust.RegionId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.RegionList);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cust.CityId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CityList);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cust.LocationId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.LocationList);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    border: 1px solid grey;\\r\\n    border-collapse: collapse;\\r\\n    padding: 5px;\\r\\n  }\\r\\n  \\r\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd) {\\r\\n    background-color: #f1f1f1;\\r\\n  }\\r\\n  \\r\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\r\\n    background-color: #ffffff;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXIvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlLCB0aCAsIHRkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gIH1cclxuICBcclxuICB0YWJsZSB0cjpudGgtY2hpbGQob2RkKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xyXG4gIH1cclxuICBcclxuICB0YWJsZSB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","EditComponent","constructor","fb","customerService","route","router","ngOnInit","loadmasters","id","Number","snapshot","params","find","subscribe","data","cust","changeCountry","changeRegion","changeCity","form","group","CustomerName","required","AssetId","CountryId","RegionId","CityId","LocationId","f","controls","submit","value","customerId","update","res","navigateByUrl","loadassets","loadcountries","getAllAssets","AssetsList","getAllCountries","CountryList","filtersRegions","RegionList","filtersCities","CityList","filtersLocations","LocationList","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\edit\\edit.component.ts","C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\edit\\edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core'; \nimport { ActivatedRoute, Router } from '@angular/router'; \nimport { FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\nimport { CustomerService } from '../customer.service';\nimport { Customer } from '../customer';\n     \n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n   \n\n  id!: number;\n  cust!: Customer;\n  form!: FormGroup;  \n \n  AssetsList: any = [];\n  CountryList: any = [];\n  RegionList: any = [];\n  CityList: any = [];\n  LocationList: any = [];\n \n  constructor(public fb: FormBuilder,\n    public customerService: CustomerService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  ngOnInit(): void {   \n    this.loadmasters();    \n    this.id = Number(this.route.snapshot.params['postId']);\n    this.customerService.find(this.id).subscribe((data: Customer)=>{  \n      this.cust = data;\n    }); \n    this.changeCountry();\n    this.changeRegion();\n    this.changeCity();   \n    \n    this.form = this.fb.group({\n      CustomerName: new FormControl('', [Validators.required]),\n      AssetId: new FormControl('', Validators.required),     \n      CountryId: new FormControl('', Validators.required),     \n      RegionId: new FormControl('', Validators.required), \n      CityId: new FormControl('', Validators.required), \n      LocationId: new FormControl('', Validators.required), \n    });\n      \n  }\n  \n  get f(){\n    return this.form.controls;\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  submit(){     \n    this.form.value.customerId=Number(this.route.snapshot.params['postId']); \n    this.customerService.update(this.form.value).subscribe((res:any) => {       \n         this.router.navigateByUrl('customer/index');\n    })\n  }\n\n  loadmasters()\n  {\n      this.loadassets();\n      this.loadcountries();         \n  }\n  \n    loadassets() {\n      return this.customerService.getAllAssets().subscribe((data: {}) => {    \n        this.AssetsList = data;\n      })\n    }\n    \n    loadcountries() {\n      return this.customerService.getAllCountries().subscribe((data: {}) => {    \n        this.CountryList = data;\n      })\n    }\n    // loadregions() {\n    //   return this.customerService.getAllRegions().subscribe((data: {}) => {    \n    //     this.RegionList  = data;\n    //   })\n    // }\n    \n    // loadcities() {\n    //   return this.customerService.getAllCities().subscribe((data: {}) => {    \n    //     this.CityList = data;\n    //   })\n    // }\n    // loadlocations() {\n    //   return this.customerService.getAllLocations().subscribe((data: {}) => {    \n    //     this.LocationList = data;\n    //   })\n    // }\n     \n    changeCountry() {   \n      return this.customerService.filtersRegions(this.cust.CountryId).subscribe((data: {}) => {    \n        this.RegionList =data;  \n      })     \n    }\n  \n    changeRegion() {   \n      return this.customerService.filtersCities(this.cust.CountryId,this.cust.RegionId).subscribe((data: {}) => {    \n        this.CityList =data;  \n      })     \n    }\n  \n    changeCity() {   \n      return this.customerService.filtersLocations(this.cust.CountryId,this.cust.RegionId,this.cust.CityId).subscribe((data: {}) => {    \n        this.LocationList  =data;  \n      })     \n    }\n}","<div class=\"container\">\n    <h4>Update Customer</h4>  \n    <a href=\"#\" routerLink=\"/customer/index\" class=\"btn btn-primary\">Back</a>        \n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n        <table class=\"table table-striped\">\n            <tr>   \n                <td> \n                 <label for=\"CustomerName\">Customer Name:</label> \n                </td>                \n                <td>  \n                    <input \n                    formControlName=\"CustomerName\" [(ngModel)]=\"cust.CustomerName\"\n                    id=\"CustomerName\" \n                    type=\"text\" \n                    class=\"form-control\">\n                <div *ngIf=\"f['CustomerName'].touched && f['CustomerName'].invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f['CustomerName'].errors && f['CustomerName'].errors['required']\">CustomerName is required.</div>\n                </div> \n                </td> \n            </tr>\n\n            <tr>   \n                <td> \n                    <label for=\"AssetId\">Asset Type:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"AssetId\" class=\"form-control\" [(ngModel)]=\"cust.AssetId\">\n                        <option value=\"\" disabled>Select AssetId</option>                \n                        <option *ngFor=\"let asset of AssetsList\" \n                        [value]=\"asset.AssetId\">{{asset.AssetName}}</option>\n                    </select>   \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"CountryId\">Country:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"CountryId\"  [(ngModel)]=\"cust.CountryId\"\n                    class=\"form-control\"  (change)=\"changeCountry()\">\n                        <option value=\"\" disabled>Select Country</option>                \n                        <option *ngFor=\"let country of CountryList\" \n                        [value]=\"country.CountryId\">{{country.CountryName}}</option>\n                    </select>  \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"RegionId\">Region:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"RegionId\" class=\"form-control\" [(ngModel)]=\"cust.RegionId\" (change)=\"changeRegion()\">\n                        <option value=\"\" disabled>Select Region</option>                \n                        <option *ngFor=\"let region of RegionList\" \n                        [value]=\"region.RegionId\">{{region.RegionName}}</option>\n                    </select>     \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"CityId\">City:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"CityId\" [(ngModel)]=\"cust.CityId\" class=\"form-control\" \n                    (change)=\"changeCity()\">\n                        <option value=\"\" disabled>Select City</option>                \n                        <option *ngFor=\"let city of CityList\" \n                        [value]=\"city.CityId\">{{city.CityName}}</option>\n                    </select>   \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"LocationId\">Location:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"LocationId\" [(ngModel)]=\"cust.LocationId\" class=\"form-control\">\n                        <option value=\"\" disabled>Select Location</option>                \n                        <option *ngFor=\"let location of LocationList\" \n                        [value]=\"location.LocationId\">{{location.LocationName}}</option>\n                    </select>   \n                </td> \n            </tr>\n            <tr>   \n                <td>                     \n                </td>\n                <td>  \n                    <button class=\"btn btn-primary\" type=\"submit\" \n                    [disabled]=\"!form.valid\">Submit</button>\n                </td> \n            </tr>\n        </table>              \n     </form>  \n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}