{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../customer.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction CreateComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const asset_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", asset_r5.AssetId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(asset_r5.AssetName);\n  }\n}\nfunction CreateComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const country_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r6.CountryId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(country_r6.CountryName);\n  }\n}\nfunction CreateComponent_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r7.RegionId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(region_r7.RegionName);\n  }\n}\nfunction CreateComponent_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r8.CityId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(city_r8.CityName);\n  }\n}\nfunction CreateComponent_option_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const location_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", location_r9.LocationId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(location_r9.LocationName);\n  }\n}\nexport class CreateComponent {\n  constructor(fb, customerService, router) {\n    this.fb = fb;\n    this.customerService = customerService;\n    this.router = router;\n    this.AssetsList = [];\n    this.CountryList = [];\n    this.RegionList = [];\n    this.CityList = [];\n    this.LocationList = [];\n  }\n  ngOnInit() {\n    this.loadmasters();\n    this.issueForm = this.fb.group({\n      customerName: new FormControl('', [Validators.required]),\n      assetId: new FormControl('', Validators.required),\n      countryId: new FormControl('', Validators.required),\n      regionId: new FormControl('', Validators.required),\n      cityId: new FormControl('', Validators.required),\n      locationId: new FormControl('', Validators.required)\n    });\n  }\n  // get f(){\n  //   return this.issueForm.controls;\n  // }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  submit() {\n    this.customerService.create(this.issueForm.value).subscribe(res => {\n      this.router.navigateByUrl('customer/index');\n    });\n  }\n  loadmasters() {\n    this.loadassets();\n    this.loadcountries();\n  }\n  loadassets() {\n    return this.customerService.getAllAssets().subscribe(data => {\n      this.AssetsList = data;\n    });\n  }\n  loadcountries() {\n    return this.customerService.getAllCountries().subscribe(data => {\n      this.CountryList = data;\n    });\n  }\n  changeCountry() {\n    return this.customerService.filtersRegions(Number(this.issueForm.value.countryId)).subscribe(data => {\n      this.RegionList = data;\n    });\n  }\n  changeRegion() {\n    return this.customerService.filtersCities(Number(this.issueForm.value.countryId), Number(this.issueForm.value.regionId)).subscribe(data => {\n      this.CityList = data;\n    });\n  }\n  changeCity() {\n    return this.customerService.filtersLocations(Number(this.issueForm.value.countryId), Number(this.issueForm.value.regionId), Number(this.issueForm.value.cityId)).subscribe(data => {\n      this.LocationList = data;\n    });\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 63,\n  vars: 7,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/customer/index\", 1, \"btn\", \"btn-primary\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"table\", \"table-striped\"], [\"for\", \"customerName\"], [\"formControlName\", \"customerName\", \"id\", \"customerName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"assetId\"], [\"formControlName\", \"assetId\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"CountryId\"], [\"formControlName\", \"countryId\", 1, \"form-control\", 3, \"change\"], [\"for\", \"regionId\"], [\"formControlName\", \"regionId\", 1, \"form-control\", 3, \"change\"], [\"for\", \"cityId\"], [\"formControlName\", \"cityId\", 1, \"form-control\", 3, \"change\"], [\"for\", \"locationId\"], [\"formControlName\", \"locationId\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Create New Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(6, \"table\", 3)(7, \"tr\")(8, \"td\")(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Customer Name:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"td\");\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"tr\")(14, \"td\")(15, \"label\", 6);\n      i0.ɵɵtext(16, \"Asset Type:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"td\")(18, \"select\", 7)(19, \"option\", 8);\n      i0.ɵɵtext(20, \"Select Asset Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, CreateComponent_option_21_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"tr\")(23, \"td\")(24, \"label\", 10);\n      i0.ɵɵtext(25, \"Country:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"td\")(27, \"select\", 11);\n      i0.ɵɵlistener(\"change\", function CreateComponent_Template_select_change_27_listener() {\n        return ctx.changeCountry();\n      });\n      i0.ɵɵelementStart(28, \"option\", 8);\n      i0.ɵɵtext(29, \"Select Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, CreateComponent_option_30_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"tr\")(32, \"td\")(33, \"label\", 12);\n      i0.ɵɵtext(34, \"Region:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"td\")(36, \"select\", 13);\n      i0.ɵɵlistener(\"change\", function CreateComponent_Template_select_change_36_listener() {\n        return ctx.changeRegion();\n      });\n      i0.ɵɵelementStart(37, \"option\", 8);\n      i0.ɵɵtext(38, \"Select Region\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(39, CreateComponent_option_39_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"tr\")(41, \"td\")(42, \"label\", 14);\n      i0.ɵɵtext(43, \"City:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"td\")(45, \"select\", 15);\n      i0.ɵɵlistener(\"change\", function CreateComponent_Template_select_change_45_listener() {\n        return ctx.changeCity();\n      });\n      i0.ɵɵelementStart(46, \"option\", 8);\n      i0.ɵɵtext(47, \"Select City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(48, CreateComponent_option_48_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(49, \"tr\")(50, \"td\")(51, \"label\", 16);\n      i0.ɵɵtext(52, \"Location:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(53, \"td\")(54, \"select\", 17)(55, \"option\", 8);\n      i0.ɵɵtext(56, \"Select Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(57, CreateComponent_option_57_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(58, \"tr\");\n      i0.ɵɵelement(59, \"td\");\n      i0.ɵɵelementStart(60, \"td\")(61, \"button\", 18);\n      i0.ɵɵtext(62, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.issueForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.AssetsList);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CountryList);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.RegionList);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.CityList);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.LocationList);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !ctx.issueForm.valid);\n    }\n  },\n  dependencies: [i4.NgForOf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    border: 1px solid grey;\\r\\n    border-collapse: collapse;\\r\\n    padding: 5px;\\r\\n  }\\r\\n  \\r\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd) {\\r\\n    background-color: #f1f1f1;\\r\\n  }\\r\\n  \\r\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\r\\n    background-color: #ffffff;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXIvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSwgdGggLCB0ZCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgdGFibGUgdHI6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcclxuICB9XHJcbiAgXHJcbiAgdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","CreateComponent","constructor","fb","customerService","router","ngOnInit","loadmasters","issueForm","group","customerName","required","assetId","countryId","regionId","cityId","locationId","submit","create","value","subscribe","res","navigateByUrl","loadassets","loadcountries","getAllAssets","data","AssetsList","getAllCountries","CountryList","changeCountry","filtersRegions","Number","RegionList","changeRegion","filtersCities","CityList","changeCity","filtersLocations","LocationList","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projects\\CustomerAssetsPortal\\CustomerAssetsWeb\\customerportal\\src\\app\\customer\\create\\create.component.ts","C:\\Projects\\CustomerAssetsPortal\\CustomerAssetsWeb\\customerportal\\src\\app\\customer\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../customer.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  issueForm!: FormGroup;\n  AssetsList: any = [];\n  CountryList: any = [];\n  RegionList: any = [];\n  CityList: any = [];\n  LocationList: any = [];\n     \n  constructor( public fb: FormBuilder,  public customerService: CustomerService,\n     private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadmasters();\n\n    this.issueForm = this.fb.group({\n      customerName: new FormControl('', [Validators.required]),\n      assetId: new FormControl('', Validators.required),     \n      countryId: new FormControl('', Validators.required),     \n      regionId: new FormControl('', Validators.required), \n      cityId: new FormControl('', Validators.required), \n      locationId: new FormControl('', Validators.required), \n    });\n  }\n\n\n  // get f(){\n  //   return this.issueForm.controls;\n  // }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  submit(){    \n    this.customerService.create(this.issueForm.value).subscribe((res:any) => {     \n         this.router.navigateByUrl('customer/index');\n    })\n  }\n\nloadmasters()\n{\n    this.loadassets();\n    this.loadcountries();  \n}\n\n  loadassets() {\n    return this.customerService.getAllAssets().subscribe((data: {}) => {    \n      this.AssetsList = data;\n    })\n  }\n  \n  loadcountries() {\n    return this.customerService.getAllCountries().subscribe((data: {}) => {    \n      this.CountryList = data;\n    })\n  }\n\n   \n  changeCountry() {   \n    return this.customerService.filtersRegions(Number(this.issueForm.value.countryId)).subscribe((data: {}) => {    \n      this.RegionList =data;  \n    })     \n  }\n\n  changeRegion() {   \n    return this.customerService.filtersCities (Number(this.issueForm.value.countryId),Number(this.issueForm.value.regionId)).subscribe((data: {}) => {    \n      this.CityList =data;  \n    })     \n  }\n\n  changeCity() {   \n    return this.customerService.filtersLocations(Number(this.issueForm.value.countryId),Number(this.issueForm.value.regionId),Number(this.issueForm.value.cityId)).subscribe((data: {}) => {    \n      this.LocationList  =data;  \n    })     \n  }\n}\n","<div class=\"container\">\n    <h4>Create New Customer</h4>  \n    <a href=\"#\" routerLink=\"/customer/index\" class=\"btn btn-primary\">Back</a>        \n      <form [formGroup]=\"issueForm\" (ngSubmit)=\"submit()\">\n        <table class=\"table table-striped\">\n            <tr>   \n                <td> \n                 <label for=\"customerName\">Customer Name:</label> \n                </td>\n                <td>  \n                    <input \n                    formControlName=\"customerName\"\n                    id=\"customerName\" \n                    type=\"text\" \n                    class=\"form-control\">\n                \n                </td> \n            </tr>\n\n            <tr>   \n                <td> \n                    <label for=\"assetId\">Asset Type:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"assetId\" class=\"form-control\">\n                        <option value=\"\" disabled>Select Asset Type</option>                \n                        <option *ngFor=\"let asset of AssetsList\" \n                        [value]=\"asset.AssetId\">{{asset.AssetName}}</option>\n                    </select>   \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"CountryId\">Country:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"countryId\"  \n                    class=\"form-control\"  (change)=\"changeCountry()\">\n                        <option value=\"\"  disabled>Select Country</option>                \n                        <option *ngFor=\"let country of CountryList\" \n                        [value]=\"country.CountryId\">{{country.CountryName}}</option>\n                    </select>  \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"regionId\">Region:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"regionId\" class=\"form-control\" (change)=\"changeRegion()\">\n                        <option value=\"\"  disabled>Select Region</option>                \n                        <option *ngFor=\"let region of RegionList\" \n                        [value]=\"region.RegionId\">{{region.RegionName}}</option>\n                    </select>     \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"cityId\">City:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"cityId\" class=\"form-control\" (change)=\"changeCity()\">\n                        <option value=\"\"  disabled>Select City</option>                \n                        <option *ngFor=\"let city of CityList\" \n                        [value]=\"city.CityId\">{{city.CityName}}</option>\n                    </select>   \n                </td> \n            </tr>\n            <tr>   \n                <td> \n                    <label for=\"locationId\">Location:</label>\n                </td>\n                <td>  \n                    <select formControlName=\"locationId\" class=\"form-control\">\n                        <option value=\"\" disabled>Select Location</option>                \n                        <option *ngFor=\"let location of LocationList\" \n                        [value]=\"location.LocationId\">{{location.LocationName}}</option>\n                    </select>   \n                </td> \n            </tr>\n            <tr>   \n                <td>                     \n                </td>\n                <td>  \n                    <button class=\"btn btn-primary\" type=\"submit\" \n                    [disabled]=\"!issueForm.valid\">Submit</button>\n                </td> \n            </tr>\n        </table>              \n     </form>  \n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}