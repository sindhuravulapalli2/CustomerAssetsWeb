{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../customer.service\";\nimport * as i2 from \"@angular/router\";\nexport class CreateComponent {\n  constructor(customerService, router) {\n    this.customerService = customerService;\n    this.router = router;\n    this.Department = [{\n      DepartmentId: 1,\n      Value: 'Software'\n    }, {\n      DepartmentId: 2,\n      Value: 'HR'\n    }, {\n      DepartmentId: 3,\n      Value: 'Marketing'\n    }];\n    this.Gender = [{\n      GenderId: 1,\n      Value: 'Male'\n    }, {\n      GenderId: 2,\n      Value: 'Female'\n    }];\n  }\n  ngOnInit() {\n    this.form = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      dob: new FormControl('', Validators.required),\n      departmentId: new FormControl('', Validators.required)\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  /**\r\n   * Write code on Method\r\n   *\r\n   * @return response()\r\n   */\n  submit() {\n    console.log(this.form.value);\n    this.customerService.create(this.form.value).subscribe(res => {\n      console.log('Post created successfully!');\n      this.router.navigateByUrl('employee/index');\n    });\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.CustomerService), i0.ɵɵdirectiveInject(i2.Router));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[1, \"container\"], [\"href\", \"#\", \"routerLink\", \"/employee/index\", 1, \"btn\", \"btn-primary\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Create New Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AASnE,OAAM,MAAOC,eAAe;EAa1BC,YACSC,eAAgC,EAC/BC,MAAc;IADf,oBAAe,GAAfD,eAAe;IACd,WAAM,GAANC,MAAM;IAdhB,eAAU,GAAS,CACjB;MAAEC,YAAY,EAAE,CAAC;MAAGC,KAAK,EAAE;IAAU,CAAE,EACvC;MAAED,YAAY,EAAE,CAAC;MAAGC,KAAK,EAAE;IAAI,CAAE,EACjC;MAAED,YAAY,EAAE,CAAC;MAAGC,KAAK,EAAE;IAAW,CAAE,CACzC;IAED,WAAM,GAAS,CACb;MAAEC,QAAQ,EAAE,CAAC;MAAED,KAAK,EAAE;IAAM,CAAE,EAC9B;MAAEC,QAAQ,EAAE,CAAC;MAAED,KAAK,EAAE;IAAQ,CAAG,CAClC;EAMG;EACJE,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAIV,SAAS,CAAC;MACxBW,SAAS,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MACrDC,QAAQ,EAAE,IAAId,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACW,QAAQ,CAAC;MAClDE,MAAM,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACW,QAAQ,CAAC;MAChDG,GAAG,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACW,QAAQ,CAAC;MAC7CI,YAAY,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACW,QAAQ;KACtD,CAAC;EACJ;EAGA,IAAIK,CAAC;IACH,OAAO,IAAI,CAACP,IAAI,CAACQ,QAAQ;EAC3B;EAEA;;;;;EAKAC,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC;IAC5B,IAAI,CAAClB,eAAe,CAACmB,MAAM,CAAC,IAAI,CAACb,IAAI,CAACY,KAAK,CAAC,CAACE,SAAS,CAAEC,GAAO,IAAI;MAC9DL,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,IAAI,CAAChB,MAAM,CAACqB,aAAa,CAAC,gBAAgB,CAAC;IAChD,CAAC,CAAC;EACJ;;AA3CWxB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BC,8BAAuB;MACfA,mCAAmB;MAAAA,iBAAK;MAC5BA,4BAAiE;MAAAA,oBAAI;MAAAA,iBAAI","names":["FormControl","FormGroup","Validators","CreateComponent","constructor","customerService","router","DepartmentId","Value","GenderId","ngOnInit","form","firstName","required","lastName","gender","dob","departmentId","f","controls","submit","console","log","value","create","subscribe","res","navigateByUrl","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\create\\create.component.ts","C:\\Projects\\AssetPortal\\customerportal\\src\\app\\customer\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerService } from '../customer.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  Department : any = [\n    { DepartmentId: 1 , Value: 'Software' },\n    { DepartmentId: 2 , Value: 'HR' },\n    { DepartmentId: 3 , Value: 'Marketing' } \n  ];\n\n  Gender : any = [\n    { GenderId: 1, Value: 'Male' },\n    { GenderId: 2, Value: 'Female'  } \n  ];\n \n  form!: FormGroup;\n  constructor(\n    public customerService: CustomerService,\n    private router: Router\n  ) { }\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      dob: new FormControl('', Validators.required),\n      departmentId: new FormControl('', Validators.required),\n    });\n  }\n\n\n  get f(){\n    return this.form.controls;\n  }\n    \n  /**\n   * Write code on Method\n   *\n   * @return response()\n   */\n  submit(){\n    console.log(this.form.value);\n    this.customerService.create(this.form.value).subscribe((res:any) => {\n         console.log('Post created successfully!');\n         this.router.navigateByUrl('employee/index');\n    })\n  }\n\n}\n","<div class=\"container\">\n    <h1>Create New Employee</h1>  \n    <a href=\"#\" routerLink=\"/employee/index\" class=\"btn btn-primary\">Back</a>        \n    <!-- <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n    </form> -->\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}